name: Build Android App Bundle
run-name: Build Celestial Oracle Android App ðŸš€

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Android App Bundle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          packages: 'platforms;android-35 build-tools;35.0.0'

      - name: Install dependencies
        run: npm install

      - name: Build Vite app
        run: npm run build

      - name: Remove old Android folder
        run: rm -rf android || true

      - name: Add Android platform
        run: |
          npx cap add android
          npx cap sync android

      - name: Update Gradle properties globally
        run: |
          cat > android/gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx4096m
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
          
          echo "âœ… gradle.properties created"

      - name: Update build.gradle with API 35
        run: |
          BUILD_GRADLE="android/app/build.gradle"
          
          python3 << 'PYTHON_SCRIPT'
          import re
          
          gradle_file = "android/app/build.gradle"
          
          with open(gradle_file, 'r') as f:
              content = f.read()
          
          # Replace API levels - aggressive approach
          content = re.sub(r'compileSdkVersion\s*=\s*\d+', 'compileSdkVersion = 35', content)
          content = re.sub(r'targetSdkVersion\s*=\s*\d+', 'targetSdkVersion = 35', content)
          content = re.sub(r'minSdkVersion\s*=\s*\d+', 'minSdkVersion = 24', content)
          content = re.sub(r'versionCode\s+\d+', 'versionCode 2', content)
          
          with open(gradle_file, 'w') as f:
              f.write(content)
          
          print("âœ… Updated build.gradle")
          print("\nVerifying:")
          with open(gradle_file, 'r') as f:
              for i, line in enumerate(f, 1):
                  if any(x in line for x in ['compileSdk', 'targetSdk', 'minSdk', 'versionCode']):
                      print(f"  Line {i}: {line.rstrip()}")
          PYTHON_SCRIPT

      - name: Decode Keystore
        run: |
          mkdir -p android/app
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build App Bundle
        run: |
          cd android
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=$(pwd)/app/keystore.jks \
            -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}" \
            --stacktrace

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: celestial-oracle-release-aab-v2
          path: android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 30

      - name: Build Success
        run: echo "âœ… Build complete!"
