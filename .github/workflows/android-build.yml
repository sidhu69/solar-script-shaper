name: Android Build v19 - OOM Fix

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install dependencies
      run: npm ci

    - name: Update version to 19
      run: |
        echo "Updating version to 19 (1.0.7)..."
        
        # Update package.json
        sed -i 's/"version": ".*"/"version": "1.0.7"/' package.json
        
        # Update build.gradle versionCode and versionName
        sed -i 's/versionCode [0-9]*/versionCode 19/' android/app/build.gradle
        sed -i 's/versionName ".*"/versionName "1.0.7"/' android/app/build.gradle
        sed -i 's/versionCodeOverride = [0-9]*/versionCodeOverride = 19/' android/app/build.gradle
        
        echo "Version updated successfully!"
        grep -A 5 "defaultConfig" android/app/build.gradle | grep -E "versionCode|versionName"

    - name: Build optimized React app
      run: npm run build
      env:
        NODE_OPTIONS: --max-old-space-size=4096

    - name: Sync Capacitor
      run: npx cap sync android

    - name: Verify AdMob configuration
      run: |
        echo "Checking AdMob Application ID in AndroidManifest.xml..."
        grep "ca-app-pub-3375938019790298~8473700666" android/app/src/main/AndroidManifest.xml || echo "WARNING: AdMob ID not found!"

    - name: Make gradlew executable
      run: chmod +x android/gradlew

    - name: Decode keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo "Decoding keystore..."
        echo "$KEYSTORE_BASE64" | base64 -d > android/app/release.keystore
        echo "Keystore decoded successfully!"

    - name: Build Android Release AAB with R8 optimization
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        cd android
        
        echo "Building release AAB with R8 minification and resource shrinking..."
        
        # Set Gradle options for better performance
        export GRADLE_OPTS="-Xmx4096m -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError"
        
        ./gradlew bundleRelease \
          -Pandroid.injected.signing.store.file=$(pwd)/app/release.keystore \
          -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
          -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
          -Pandroid.injected.signing.key.password=$KEY_PASSWORD \
          --stacktrace \
          --info

    - name: Verify AAB was created
      run: |
        if [ -f "android/app/build/outputs/bundle/release/app-release.aab" ]; then
          echo "✅ AAB created successfully!"
          ls -lh android/app/build/outputs/bundle/release/app-release.aab
        else
          echo "❌ AAB not found!"
          exit 1
        fi

    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: cosmic-astrology-v19-release
        path: android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 30
        if-no-files-found: error

    - name: Upload ProGuard mapping file
      uses: actions/upload-artifact@v4
      with:
        name: proguard-mapping-v19
        path: android/app/build/outputs/mapping/release/mapping.txt
        retention-days: 90
        if-no-files-found: warn

    - name: Build summary
      run: |
        echo "## 🚀 Build Complete - Version 19 (1.0.7)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Build Artifacts:" >> $GITHUB_STEP_SUMMARY
        echo "- **AAB File**: app-release.aab" >> $GITHUB_STEP_SUMMARY
        echo "- **Size**: $(ls -lh android/app/build/outputs/bundle/release/app-release.aab | awk '{print $5}')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✨ Optimizations Applied:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ R8 code shrinking enabled" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Resource shrinking enabled" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MultiDex enabled" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ 4GB heap size for builds" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the AAB from Actions artifacts" >> $GITHUB_STEP_SUMMARY
        echo "2. Upload to Google Play Internal Testing" >> $GITHUB_STEP_SUMMARY
        echo "3. Test on device to verify OOM fix" >> $GITHUB_STEP_SUMMARY
